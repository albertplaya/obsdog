services:
  sqlite-db:
    image: alpine:latest
    container_name: devobs-sqlite
    volumes:
      - sqlite_data:/data
      - ./server/data:/data:rw
    working_dir: /data
    command: sh -c "apk add --no-cache sqlite && echo 'SQLite service ready' && tail -f /dev/null"
    healthcheck:
      test: ["CMD", "sqlite3", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3

  devobs-front:
    build: .
    image: yourorg/devobs:latest
    ports:
      - "3001:3001"   # UI + ingest
    environment:
      - TARGET_URL=http://host.docker.internal:8080
      - OTLP_PATH=/v1/otlp/http/traces
      - OBS_RETENTION_MIN=60
      - NODE_ENV=development
    volumes:
      - ./web:/app/web
      - /app/web/node_modules
    working_dir: /app/web
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 3001"

  devobs-backend:
    build: .
    image: yourorg/devobs:latest
    ports:
      - "3003:3001"   # Backend API only
    environment:
      - TARGET_URL=http://host.docker.internal:8080
      - OTLP_PATH=/v1/otlp/http/traces
      - OBS_RETENTION_MIN=60
      - NODE_ENV=development
      - DB_PATH=/app/server/data/devobs.db
    volumes:
      - ./server:/app/server
      - /app/server/node_modules
      - ./server/data:/app/server/data:rw
    working_dir: /app/server
    command: npx nodemon server.ts
    depends_on:
      sqlite-db:
        condition: service_healthy

  server-test:
    build: ./server-test
    ports:
      - "8080:8080"   # test server port
    environment:
      - NODE_ENV=development
    volumes:
      - ./server-test:/app
      - /app/node_modules
    working_dir: /app
    command: npx node -r @opentelemetry/auto-instrumentations-node/register index.js

volumes:
  sqlite_data:
    driver: local
